{"ast":null,"code":"var _jsxFileName = \"D:\\\\YU\\\\3-2\\\\SWE\\\\PS\\\\full\\\\src\\\\main\\\\frontend\\\\src\\\\pages\\\\Scoreboard.js\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport HomeButton from \"../components/HomeButton\";\nimport Posts from \"../components/Posts\";\nimport { MyContextProvider } from \"../components/myContext\";\nimport Pagination from \"../pages/Pagination\";\nimport useDarkMode from \"../theme/useDarkMode\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Scoreboard() {\n  _s();\n  const [theme, toggleTheme] = useDarkMode();\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [postsPerPage, setPostsPerPage] = useState(10);\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true);\n      const response = await axios.get(\"https://jsonplaceholder.typicode.com/posts\");\n      setPosts(response.data); // response.data가 배열인 경우\n      setLoading(false);\n    };\n    fetchData();\n  }, []);\n  const indexOfLast = currentPage * postsPerPage;\n  const indexOfFirst = indexOfLast - postsPerPage;\n  const currentPosts = posts => {\n    let currentPosts = 0;\n    currentPosts = posts.slice(indexOfFirst, indexOfLast);\n    return currentPosts;\n  };\n  const handlePageChange = useCallback(pageNumber => {\n    setCurrentPage(pageNumber);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(MyContextProvider, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `container ${theme.dark ? \"dark\" : \"light\"}`,\n      children: [/*#__PURE__*/_jsxDEV(HomeButton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"darkBtn\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggleTheme,\n          children: theme.dark ? \"Switch to Light Mode\" : \"Switch to Dark Mode\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"List\",\n        children: /*#__PURE__*/_jsxDEV(Posts, {\n          className: `linkList ${theme.dark ? \"dark\" : \"light\"}`,\n          posts: currentPosts(posts),\n          loading: loading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n        postsPerPage: 10 // 페이지당 목록 개수를 10으로 설정\n        ,\n        totalPosts: posts.length,\n        currentPage: currentPage,\n        onPageChange: handlePageChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/WriteBoard\",\n        className: ` ${theme.dark ? \"dark\" : \"light\"}`,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"\\uAE00\\uC4F0\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 7\n  }, this);\n}\n_s(Scoreboard, \"GkzI+BELvyh4MxVM/8wkjX2P7EI=\", false, function () {\n  return [useDarkMode];\n});\n_c = Scoreboard;\n;\nexport default Scoreboard;\nvar _c;\n$RefreshReg$(_c, \"Scoreboard\");","map":{"version":3,"names":["axios","React","useCallback","useEffect","useState","Link","HomeButton","Posts","MyContextProvider","Pagination","useDarkMode","jsxDEV","_jsxDEV","Scoreboard","_s","theme","toggleTheme","posts","setPosts","loading","setLoading","currentPage","setCurrentPage","postsPerPage","setPostsPerPage","fetchData","response","get","data","indexOfLast","indexOfFirst","currentPosts","slice","handlePageChange","pageNumber","children","className","dark","fileName","_jsxFileName","lineNumber","columnNumber","onClick","totalPosts","length","onPageChange","to","_c","$RefreshReg$"],"sources":["D:/YU/3-2/SWE/PS/full/src/main/frontend/src/pages/Scoreboard.js"],"sourcesContent":["import axios from \"axios\";\r\nimport React, { useCallback, useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport HomeButton from \"../components/HomeButton\";\r\nimport Posts from \"../components/Posts\";\r\nimport { MyContextProvider } from \"../components/myContext\";\r\nimport Pagination from \"../pages/Pagination\";\r\nimport useDarkMode from \"../theme/useDarkMode\";\r\n\r\nfunction Scoreboard () {\r\n    const [theme, toggleTheme] = useDarkMode();\r\n    const [posts, setPosts] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [postsPerPage, setPostsPerPage] = useState(10);\r\n  \r\n    useEffect(() => {\r\n      const fetchData = async () => {\r\n        setLoading(true);\r\n        const response = await axios.get(\r\n          \"https://jsonplaceholder.typicode.com/posts\"\r\n        );\r\n        setPosts(response.data); // response.data가 배열인 경우\r\n        setLoading(false);\r\n      };\r\n      fetchData();\r\n    }, []);\r\n    \r\n    const indexOfLast = currentPage * postsPerPage;\r\n    const indexOfFirst = indexOfLast - postsPerPage;\r\n    const currentPosts = (posts) => {\r\n      let currentPosts = 0;\r\n      currentPosts = posts.slice(indexOfFirst, indexOfLast);\r\n      return currentPosts;\r\n    };\r\n\r\n    const handlePageChange = useCallback((pageNumber) => {\r\n      setCurrentPage(pageNumber);\r\n    }, []);\r\n\r\n    return (\r\n      <MyContextProvider>\r\n        <div className={`container ${theme.dark ? \"dark\" : \"light\"}`}>\r\n            <HomeButton />\r\n            <div className=\"darkBtn\">\r\n                <button onClick={toggleTheme}>\r\n                    {theme.dark ? \"Switch to Light Mode\" : \"Switch to Dark Mode\"}\r\n                </button>\r\n            </div>\r\n            <div className=\"List\">\r\n              <Posts className={`linkList ${theme.dark ? \"dark\" : \"light\"}`}\r\n                posts={currentPosts(posts)}\r\n                loading={loading}>\r\n              </Posts>\r\n            </div>\r\n            <Pagination\r\n              postsPerPage={10} // 페이지당 목록 개수를 10으로 설정\r\n              totalPosts={posts.length}\r\n              currentPage={currentPage}\r\n              onPageChange={handlePageChange}\r\n            />\r\n            <Link to=\"/WriteBoard\" className={` ${theme.dark ? \"dark\" : \"light\"}`}>\r\n              <button>글쓰기</button>\r\n            </Link>\r\n        </div>\r\n        </MyContextProvider>\r\n    );\r\n};\r\n\r\nexport default Scoreboard;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
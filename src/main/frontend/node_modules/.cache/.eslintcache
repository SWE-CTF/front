[{"/Users/1s0m0rph1sm/Desktop/YU/SWE/se/front/src/main/frontend/src/index.js":"1","/Users/1s0m0rph1sm/Desktop/YU/SWE/se/front/src/main/frontend/src/App.js":"2","/Users/1s0m0rph1sm/Desktop/YU/SWE/se/front/src/main/frontend/src/reportWebVitals.js":"3","/Users/1s0m0rph1sm/Desktop/YU/SWE/se/front/src/main/frontend/src/pages/Home.js":"4","/Users/1s0m0rph1sm/Desktop/YU/SWE/se/front/src/main/frontend/src/pages/Announcement.js":"5","/Users/1s0m0rph1sm/Desktop/YU/SWE/se/front/src/main/frontend/src/pages/Challenges.js":"6","/Users/1s0m0rph1sm/Desktop/YU/SWE/se/front/src/main/frontend/src/pages/Login.js":"7","/Users/1s0m0rph1sm/Desktop/YU/SWE/se/front/src/main/frontend/src/pages/Scoreboard.js":"8","/Users/1s0m0rph1sm/Desktop/YU/SWE/se/front/src/main/frontend/src/pages/MyPage.js":"9","/Users/1s0m0rph1sm/Desktop/YU/SWE/se/front/src/main/frontend/src/Board/Edit.js":"10","/Users/1s0m0rph1sm/Desktop/YU/SWE/se/front/src/main/frontend/src/pages/Signup.js":"11","/Users/1s0m0rph1sm/Desktop/YU/SWE/se/front/src/main/frontend/src/Board/BoardMain.js":"12","/Users/1s0m0rph1sm/Desktop/YU/SWE/se/front/src/main/frontend/src/pages/WriteBoard.js":"13","/Users/1s0m0rph1sm/Desktop/YU/SWE/se/front/src/main/frontend/src/Board/BoardDetail.js":"14","/Users/1s0m0rph1sm/Desktop/YU/SWE/se/front/src/main/frontend/src/Board/Board.js":"15","/Users/1s0m0rph1sm/Desktop/YU/SWE/se/front/src/main/frontend/src/pages/Pagination.js":"16","/Users/1s0m0rph1sm/Desktop/YU/SWE/se/front/src/main/frontend/src/components/HomeButton.js":"17","/Users/1s0m0rph1sm/Desktop/YU/SWE/se/front/src/main/frontend/src/components/myContext.js":"18","/Users/1s0m0rph1sm/Desktop/YU/SWE/se/front/src/main/frontend/src/components/Nav.js":"19","/Users/1s0m0rph1sm/Desktop/YU/SWE/se/front/src/main/frontend/src/components/Posts.js":"20","/Users/1s0m0rph1sm/Desktop/YU/SWE/se/front/src/main/frontend/src/components/Pagination.js":"21","/Users/1s0m0rph1sm/Desktop/YU/SWE/se/front/src/main/frontend/src/components/LoginHome.js":"22","/Users/1s0m0rph1sm/Desktop/YU/SWE/se/front/src/main/frontend/src/theme/useDarkMode.js":"23","/Users/1s0m0rph1sm/Desktop/YU/SWE/se/front/src/main/frontend/src/Board/Pagination.js":"24"},{"size":536,"mtime":1700076267558,"results":"25","hashOfConfig":"26"},{"size":1626,"mtime":1700076267557,"results":"27","hashOfConfig":"26"},{"size":362,"mtime":1700076267559,"results":"28","hashOfConfig":"26"},{"size":496,"mtime":1700076267559,"results":"29","hashOfConfig":"26"},{"size":1997,"mtime":1700076267559,"results":"30","hashOfConfig":"26"},{"size":2976,"mtime":1700109005872,"results":"31","hashOfConfig":"26"},{"size":2650,"mtime":1700076267559,"results":"32","hashOfConfig":"26"},{"size":3770,"mtime":1700115730519,"results":"33","hashOfConfig":"26"},{"size":1251,"mtime":1700076267559,"results":"34","hashOfConfig":"26"},{"size":3177,"mtime":1700076267557,"results":"35","hashOfConfig":"26"},{"size":4868,"mtime":1700076267559,"results":"36","hashOfConfig":"26"},{"size":2156,"mtime":1700076267557,"results":"37","hashOfConfig":"26"},{"size":8820,"mtime":1700115402269,"results":"38","hashOfConfig":"26"},{"size":3393,"mtime":1700076267557,"results":"39","hashOfConfig":"26"},{"size":1426,"mtime":1700076267557,"results":"40","hashOfConfig":"26"},{"size":1374,"mtime":1700076267559,"results":"41","hashOfConfig":"26"},{"size":268,"mtime":1700076267558,"results":"42","hashOfConfig":"26"},{"size":640,"mtime":1700076267558,"results":"43","hashOfConfig":"26"},{"size":1180,"mtime":1700076267558,"results":"44","hashOfConfig":"26"},{"size":701,"mtime":1700108909566,"results":"45","hashOfConfig":"26"},{"size":708,"mtime":1700106362113,"results":"46","hashOfConfig":"26"},{"size":2468,"mtime":1700076267558,"results":"47","hashOfConfig":"26"},{"size":847,"mtime":1700076267560,"results":"48","hashOfConfig":"26"},{"size":2008,"mtime":1700076267557,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},"kc178m",{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"53"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"53"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"53"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"53"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"53"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"53"},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"53"},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"53"},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"53"},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"53"},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"53"},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"125","messages":"126","suppressedMessages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"128","messages":"129","suppressedMessages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"131","messages":"132","suppressedMessages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"53"},"/Users/1s0m0rph1sm/Desktop/YU/SWE/se/front/src/main/frontend/src/index.js",[],[],["135","136","137","138","139","140"],"/Users/1s0m0rph1sm/Desktop/YU/SWE/se/front/src/main/frontend/src/App.js",[],[],"/Users/1s0m0rph1sm/Desktop/YU/SWE/se/front/src/main/frontend/src/reportWebVitals.js",[],[],"/Users/1s0m0rph1sm/Desktop/YU/SWE/se/front/src/main/frontend/src/pages/Home.js",["141","142","143","144"],[],"import { Link } from \"react-router-dom\";\nimport logo from \"../cherry.png\";\nimport useDarkMode from \"../theme/useDarkMode\"; //useDarkMode hook 추가\nimport LoginHome from \"../components/LoginHome\";\nimport Nav from \"../components/Nav\";\nimport HomeButton from \"../components/HomeButton\";\n\nconst Home = () => {\n  const [theme, toggleTheme] = useDarkMode();\n  return (\n    <div>\n      <Nav></Nav>\n      <HomeButton></HomeButton>\n      <LoginHome></LoginHome>\n    </div>\n  );\n};\n\nexport default Home;\n","/Users/1s0m0rph1sm/Desktop/YU/SWE/se/front/src/main/frontend/src/pages/Announcement.js",["145"],[],"import Pagination from \"./Pagination\";\nimport { Link } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport HomeButton from \"../components/HomeButton\";\nimport Nav from \"../components/Nav\";\n\nconst Announcement = () => {\n  const [posts, setPosts] = useState([]);\n  const [limit, setLimit] = useState(10);\n  const [page, setPage] = useState(1);\n  const offset = (page - 1) * limit;\n\n  const getInit = async () => {\n    axios\n      .get(\"http://localhost:8080/api/data\")\n      .then((res) => {\n        console.log(res.data);\n        setPosts(res.data);\n      })\n      .catch((Error) => {\n        console.log(Error);\n      });\n  };\n\n  useEffect(() => {\n    getInit();\n  }, []);\n\n  return (\n    <div className=\"Gesipan\">\n      <HomeButton></HomeButton>\n      <Nav></Nav>\n      <div className=\"title\">\n        <strong>Announcement</strong>\n      </div>\n      <div className=\"list_top\">\n        <div className=\"num\">번호</div>\n        <div className=\"content\">제목</div>\n        {/* <div className=\"challengeId\">문제 번호</div> */}\n        <div className=\"nickname\">작성자</div>\n      </div>\n      <div className=\"list_wrap\">\n        <div className=\"list\">\n          {posts\n            .slice(offset, offset + limit) // 데이터를 원하는 범위로 슬라이스합니다.\n            .map(({ questionID, title, nickname, challengeId }) => (\n              <Link to={`/api/question/${questionID}`}>\n                <article key={questionID}>\n                  <div>{questionID}.</div>\n                  <div>{title}</div>\n                  <div>{challengeId}</div>\n                  <div>{nickname}</div>\n                </article>\n              </Link>\n            ))}\n        </div>\n        <div className=\"page\">\n          <Pagination\n            total={posts.length}\n            limit={limit}\n            page={page}\n            setPage={setPage}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Announcement;\n","/Users/1s0m0rph1sm/Desktop/YU/SWE/se/front/src/main/frontend/src/pages/Challenges.js",[],[],"/Users/1s0m0rph1sm/Desktop/YU/SWE/se/front/src/main/frontend/src/pages/Login.js",["146"],[],"import axios from \"axios\";\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport HomeButton from \"../components/HomeButton\";\nimport useDarkMode from \"../theme/useDarkMode\";\n\nconst Login = () => {\n  const [credentials, setCredentials] = useState({\n    username: \"\",\n    password: \"\",\n  });\n\n  const [theme, toggleTheme] = useDarkMode();\n  const navigate = useNavigate();\n\n  const handleInputChange = (e) => {\n    setCredentials({\n      ...credentials,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const handleLogin = async (e) => {\n    e.preventDefault();\n\n    // 로그인 기준 검사\n    if (\n      credentials.username.length === 0 ||\n      credentials.password.length === 0\n    ) {\n      alert(\"아이디와 비밀번호를 입력하세요.\");\n      return;\n    }\n\n    // 서버로 로그인 데이터를 보내는 POST 요청\n    try {\n      const response = await axios.post(\"/api/member/login\", credentials, {\n        withCredentials: true,\n      });\n\n      if (response.data) {\n        localStorage.setItem(\"login_token\", response.data.token.token);\n        localStorage.setItem(\"login\", true);\n        localStorage.setItem(\"username\", response.data.username);\n        localStorage.setItem(\"name\", response.data.name);\n        localStorage.setItem(\"email\", response.data.email);\n        if (response.data.role === undefined) {\n          localStorage.setItem(\"role\", \"none\");\n        } else {\n          localStorage.setItem(\"role\", response.data.role);\n        }\n        navigate(\"/\"); // 로그인 성공 시 마이페이지로 이동\n      } else {\n        alert(\"아이디 또는 비밀번호가 일치하지 않습니다.\");\n      }\n    } catch (error) {\n      console.error(\"로그인 실패:\", error);\n      alert(\"로그인 실패했습니다. 다시 시도해주세요.\");\n    }\n  };\n\n  return (\n    <div className={`container ${theme.dark ? \"dark\" : \"light\"}`}>\n      <div className=\"Login\">\n        <HomeButton />\n        <div className=\"login\">\n          <div className=\"Id\">\n            <input\n              name=\"username\"\n              placeholder=\"ID\"\n              value={credentials.username}\n              onChange={handleInputChange}\n            ></input>\n          </div>\n          <div className=\"Password\">\n            <input\n              type=\"password\"\n              name=\"password\"\n              placeholder=\"PWD\"\n              value={credentials.password}\n              onChange={handleInputChange}\n            ></input>\n          </div>\n        </div>\n        <button onClick={handleLogin}>Sign In</button>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n","/Users/1s0m0rph1sm/Desktop/YU/SWE/se/front/src/main/frontend/src/pages/Scoreboard.js",["147"],[],"/Users/1s0m0rph1sm/Desktop/YU/SWE/se/front/src/main/frontend/src/pages/MyPage.js",["148","149","150","151"],[],"import { useState } from \"react\";\nimport React, { useEffect, useRef } from \"react\";\nimport HomeButton from \"../components/HomeButton\";\nimport Nav from \"../components/Nav\";\nimport Home from \"./Home\";\n\nconst MyPage = () => {\n  const [id, setId] = useState(\"\");\n  const [pwd, setPwd] = useState(\"\");\n  const searchElement = useRef(null); // DOM 요소를 searchElement에 할당\n  const onSignIn = () => {\n    console.log(id, pwd);\n  };\n  useEffect(() => {\n    if (searchElement.current) {\n      // 할당한 DOM 요소가 불러지면 (마운트 되면)\n      searchElement.current.focus(); // focus 할당!\n    }\n  }, []);\n  return (\n    <div className=\"MyPage\">\n      <HomeButton />\n      <Nav></Nav>\n      <div className=\"wrap\">\n        <div className=\"header\">\n          <div className=\"photo\">사진</div>\n          <div className=\"username\">\n            <strong>{localStorage.getItem(\"username\")}</strong>\n          </div>\n          <div className=\"email\">{localStorage.getItem(\"email\")}</div>\n        </div>\n        <div className=\"main\">\n          <div>제출한 문제</div>\n          <div>맞은 문제</div>\n          <div>틀린 문제</div>\n          <div>등수</div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default MyPage;\n","/Users/1s0m0rph1sm/Desktop/YU/SWE/se/front/src/main/frontend/src/Board/Edit.js",["152"],[],"import Nav from \"../components/Nav\";\nimport HomeButton from \"../components/HomeButton\";\nimport React, { useRef, useState } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nconst Ex = () => {\n  const navigate = useNavigate();\n\n  const titleRef = useRef();\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [questionId, setQuestionId] = useState(\"\");\n\n  const handleInputNum = (e) => {\n    // 입력된 값에서 숫자 이외의 문자 제거\n    const numericValue = e.target.value.replace(/[^0-9]/g, \"\");\n    setQuestionId(numericValue);\n  };\n\n  const handleSubmit = () => {\n    if (title.length < 1) {\n      titleRef.current.focus();\n      return;\n    }\n    if (questionId.length < 1) {\n      alert(\"문제 번호는 1이상입니다\");\n      return;\n    }\n    if (content.length < 5) {\n      alert(\"본문은 5글자 이상입니다.\");\n      setContent(\"\");\n      return;\n    }\n    console.log(`Bearer ${localStorage.getItem(\"login_token\")}`);\n    const challengeId = parseInt(questionId, 10);\n    const data = {\n      challengeId,\n      title,\n      content,\n    };\n\n    axios\n      .post(\n        \"/api/question/save\",\n        {\n          challengeId: challengeId,\n          title: title,\n          content: content,\n        },\n        {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem(\"login_token\")}`,\n          },\n        }\n      )\n      .then((res) => {\n        if (res.status === 200) {\n          alert(\"저장 성공!\");\n          navigate(\"/QuestionBoard\", { replace: true });\n          console.log(`Bearer ${localStorage.getItem(\"login_token\")}`);\n          return;\n        } else if (res.status === 500 || res.status === 404) {\n          alert(\"업로드 실패.\");\n          console.log(`Bearer ${localStorage.getItem(\"login_token\")}`);\n          return;\n        }\n      });\n  };\n\n  return (\n    <div className=\"Ex\">\n      <Nav></Nav>\n      <HomeButton></HomeButton>\n      <div className=\"Body\">\n        <div className=\"title\">\n          <input\n            placeholder=\"write qeustion title here\"\n            value={title}\n            onChange={(e) => setTitle(e.target.value)}\n            ref={titleRef}\n          ></input>\n        </div>\n        <div className=\"num\">\n          <input\n            placeholder=\"write problem num here\"\n            value={questionId}\n            onChange={handleInputNum}\n          ></input>\n        </div>\n        <div className=\"content\">\n          <textarea\n            placeholder=\"write question content here\"\n            value={content}\n            onChange={(e) => {\n              setContent(e.target.value);\n            }}\n          ></textarea>\n        </div>\n        <div className=\"button\">\n          <div>\n            <button\n              className=\"cancle\"\n              onClick={() => navigate(-1, { replace: true })}\n            >\n              취소\n            </button>\n          </div>\n          <div>\n            <button className=\"save\" onClick={handleSubmit}>\n              저장\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Ex;\n","/Users/1s0m0rph1sm/Desktop/YU/SWE/se/front/src/main/frontend/src/pages/Signup.js",["153"],[],"import axios from \"axios\";\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport HomeButton from \"../components/HomeButton\";\nimport useDarkMode from \"../theme/useDarkMode\";\n\nconst Signup = () => {\n  const [userData, setUserData] = useState({\n    username: \"\",\n    password: \"\",\n    passwordCheck: \"\",\n    name: \"\",\n    email: \"\",\n    nickname: \"\",\n    team: \"\"\n  });\n\n  const [theme, toggleTheme] = useDarkMode();\n  const navigate = useNavigate();\n\n  const handleInputChange = (e) => {\n    setUserData({\n      ...userData,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const emailValidation = (email) => {\n    return email.match(/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/);\n  }\n\n  const handleDuplicateCheck = async (e) => {\n    alert(\"not implemented yet\");\n    return;\n    // e.preventDefault();\n\n    // if (userData.username.length <= 5) {\n    //   alert(\"입력값을 확인하세요.\");\n    //   return;\n    // }\n\n    // // TODO: request for duplicate check \n    // const response = await axios.post(\n    //   \"/api/member/join\",\n    //   userData\n    // );\n    // if (response.data === \"아이디\") {\n    //   alert(\"사용 가능한 아이디입니다!\");\n    //   return;\n    // }\n  }\n\n  const handleSignup = async (e) => {\n    e.preventDefault();\n\n    // 회원가입 기준 검사\n    \n    if (\n      userData.username.length <= 5 ||\n      userData.password.length <= 5 ||\n      userData.name.length <= 1 ||\n      !emailValidation(userData.email) ||\n      userData.nickname.length <= 1\n    ) {\n      alert(\"입력값을 확인하세요.\");\n      return;\n    }\n\n\n    if (userData.password !== userData.passwordCheck) {\n      alert(\"패스워드와 패스워드 중복체크 값이 다릅니다.\");\n      return;\n    }\n\n    // 서버로 회원가입 데이터를 보내는 POST 요청\n    try {\n      const response = await axios.post(\n        \"/api/member/join\",\n        userData\n      );\n\n      if (response.data === \"닉네임\") {\n        alert(\"닉네임이 이미 사용중입니다.\");\n        setUserData({ ...userData, nickname: \"\" });\n        return;\n      } else if (response.data === \"이메일\") {\n        alert(\"이미 사용중인 이메일입니다.\");\n        setUserData({ ...userData, email: \"\" });\n        return;\n      }\n\n      console.log(\"회원가입 성공:\", response.data);\n      alert(\"회원가입 성공!\");\n      navigate(\"/Login\");\n    } catch (error) {\n      console.error(\"회원가입 실패:\", error);\n      alert(\"회원가입 다시 해주세요\");\n    }\n  };\n\n  return (\n    <div className={`container ${theme.dark ? \"dark\" : \"light\"}`}>\n      <div className=\"Signup\">\n        <HomeButton />\n        <div className=\"impormation\">\n          <div>\n            <div>\n              ID:\n              <input\n                name=\"username\"\n                placeholder=\"ID\"\n                value={userData.username}\n                onChange={handleInputChange}\n              ></input>\n            </div>\n            <div>\n              PWD:\n              <input\n                type=\"password\"\n                name=\"password\"\n                placeholder=\"Password\"\n                value={userData.password}\n                onChange={handleInputChange}\n              ></input>\n            </div>\n            <div>\n              PWDCHECK:\n              <input\n                type=\"password\"\n                name=\"passwordCheck\"\n                placeholder=\"Password check\"\n                value={userData.passwordCheck}\n                onChange={handleInputChange}\n              ></input>\n            </div>\n            <div>\n              NAME:\n              <input\n                name=\"name\"\n                placeholder=\"Name\"\n                value={userData.name}\n                onChange={handleInputChange}\n              ></input>\n            </div>\n            <div>\n              E-MAIL:\n              <input\n                type=\"email\"\n                name=\"email\"\n                placeholder=\"Email\"\n                value={userData.email}\n                onChange={handleInputChange}\n              ></input>\n            </div>\n            <div>\n              NICKNAME:\n              <input\n                name=\"nickname\"\n                placeholder=\"Nickname\"\n                value={userData.nickname}\n                onChange={handleInputChange}\n              ></input>\n            </div>\n            <div>\n              TEAM:\n              <input\n                name=\"team\"\n                placeholder=\"Team\"\n                value={userData.team}\n                onChange={handleInputChange}\n              ></input>\n            </div>\n          </div>\n          <button onClick={handleSignup}>Sign Up</button>\n        </div>\n        <button className=\"CheckButton\" onClick={handleDuplicateCheck}>Duplicate Check</button>\n      </div>\n    </div>\n  );\n};\n\nexport default Signup;\n","/Users/1s0m0rph1sm/Desktop/YU/SWE/se/front/src/main/frontend/src/Board/BoardMain.js",["154"],[],"import Pagination from \"./Pagination\";\nimport { Link } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport HomeButton from \"../components/HomeButton\";\nimport Nav from \"../components/Nav\";\n\nconst BoardMain = () => {\n  const [posts, setPosts] = useState([]);\n  const [limit, setLimit] = useState(10);\n  const [page, setPage] = useState(1);\n  const offset = (page - 1) * limit;\n\n  const getInit = async () => {\n    axios\n      .get(\"/api/question/paging\")\n      .then((res) => {\n        console.log(res.data);\n        const sortedPosts = res.data.sort(\n          (a, b) => b.questionId - a.questionId\n        );\n\n        setPosts(sortedPosts);\n      })\n      .catch((Error) => {\n        console.log(Error);\n      });\n  };\n\n  useEffect(() => {\n    getInit();\n  }, []);\n\n  return (\n    <div className=\"Gesipan\">\n      <HomeButton></HomeButton>\n      <Nav></Nav>\n      <div className=\"title\">\n        <strong>QuestionBoard</strong>\n      </div>\n      <div className=\"list_top\">\n        <div className=\"num\">번호</div>\n        <div className=\"content\">제목</div>\n        {/* <div className=\"challengeId\">문제 번호</div> */}\n        <div className=\"writeTime\">작성 시간</div>\n        <div className=\"nickname\">닉네임</div>\n      </div>\n      <div className=\"list_wrap\">\n        <div className=\"list\">\n          {posts\n            .slice(offset, offset + limit) // 데이터를 원하는 범위로 슬라이스합니다.\n            .map(({ questionId, title, nickname, writeTime }) => (\n              <Link className=\"link\" to={`/api/question/${questionId}`}>\n                <article key={questionId}>\n                  <div>{questionId}.</div>\n                  <div>{title}</div>\n                  <div>{writeTime}</div>\n                  <div>{nickname}</div>\n                </article>\n              </Link>\n            ))}\n        </div>\n        <div className=\"page\">\n          <Pagination\n            total={posts.length}\n            limit={limit}\n            page={page}\n            setPage={setPage}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default BoardMain;\n","/Users/1s0m0rph1sm/Desktop/YU/SWE/se/front/src/main/frontend/src/pages/WriteBoard.js",[],[],"/Users/1s0m0rph1sm/Desktop/YU/SWE/se/front/src/main/frontend/src/Board/BoardDetail.js",["155","156","157"],[],"import { useParams } from \"react-router-dom\";\nimport { Component, useEffect, useState } from \"react\";\nimport Board from \"./Board.js\";\nimport axios from \"axios\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport Nav from \"../components/Nav.js\";\nimport HomeButton from \"../components/HomeButton.js\";\n\nconst BoardDetail = () => {\n  const { questionId } = useParams(); // /board/:idx와 동일한 변수명으로 데이터를 꺼낼 수 있습니다.\n  const [board, setBoard] = useState({});\n  const [comment, setComment] = useState(\"\");\n  const navigate = useNavigate();\n  const { title } = board;\n  const { content } = board;\n  const { challengeId } = board;\n\n  // 수정 버튼 누르면 지금 게시물 정보를 가지고 editor로 이동\n  const handleEditClick = () => {\n    // 게시물 정보와 함께 '/edit' 경로로 이동\n    navigate(`/Editor`, { state: { title, content, questionId, challengeId } });\n  };\n\n  const handleCommentSave = () => {\n    if (comment.length < 2) {\n      alert(\"댓글은 2글자 이상 작성해주세요!\");\n      setComment(\"\");\n      return;\n    }\n    axios\n      .post(`http://localhost:8080/api/comment/${questionId}/save`, { comment })\n      .then((res) => {\n        alert(\"댓글이 등록되었습니다!\");\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  // 게시물 삭제\n  const handleDelete = () => {\n    const confirmDelete = window.confirm(\"정말로 삭제하시겠습니까?\");\n\n    if (confirmDelete) {\n      // 사용자가 확인을 누르면 삭제 요청 보내기\n      axios\n        .delete(`api/question/${questionId}`)\n        .then((response) => {\n          console.log(\"게시물 삭제가 완료되었습니다:\", response.data);\n          navigate(\"/\");\n          // 삭제 완료 후 필요한 작업 수행\n        })\n        .catch((error) => {\n          console.error(\"게시물 삭제에 실패했습니다:\", error);\n          // 삭제 실패 시 처리할 작업 수행\n        });\n    }\n  };\n\n  // 상세보기들어오면 해당 게시물 정보 가져오는 함수\n  const getBoard = async () => {\n    const authToken = localStorage.getItem(\"login_token\");\n    axios\n      .get(`/api/question/${questionId}`, {\n        headers: {\n          Authorization: `Bearer ${authToken}`, // Authorization 헤더에 토큰 추가\n        },\n      })\n      .then((res) => {\n        console.log(res.data);\n        setBoard(res.data);\n      })\n      .catch((Error) => {\n        console.log(Error);\n      });\n  };\n  useEffect(() => {\n    getBoard();\n  }, []);\n\n  return (\n    <div className=\"BoardDetail\">\n      <Nav></Nav>\n      <HomeButton></HomeButton>\n      <Board\n        questionId={board.questionId}\n        title={board.title}\n        contents={board.content}\n        createdBy={board.writer}\n        challengeId={board.challengeId}\n      />\n      <div className=\"modify_delete\">\n        <button className=\"delete\" onClick={handleDelete}>\n          삭제\n        </button>\n        <button className=\"modify\" onClick={handleEditClick}>\n          수정\n        </button>\n      </div>\n      <div className=\"Comment\">\n        <h3>댓글</h3>\n        <input\n          value={comment}\n          onChange={(e) => setComment(e.target.value)}\n        ></input>\n        <button onClick={handleCommentSave}>등록</button>\n      </div>\n    </div>\n  );\n};\nexport default BoardDetail;\n","/Users/1s0m0rph1sm/Desktop/YU/SWE/se/front/src/main/frontend/src/Board/Board.js",["158","159"],[],"import React, { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport axios from \"axios\";\n\nconst Board = ({\n  questionId,\n  title,\n  contents,\n  createdBy,\n  challengeId,\n  chat,\n}) => {\n  const [text, setText] = useState(\"\");\n\n  const Submit = () => {\n    if (text.length < 2) {\n      alert(\"댓글은 2자 이상 작성해주세요\");\n      setText(\"\");\n      return;\n    }\n\n    axios\n      .post(\"http://localhost:8080/api/pushChat\", {\n        questionId: questionId,\n        body: text,\n        nickname: \"yeongi\",\n      })\n      .then(function (response) {\n        alert(\"제출했음\");\n        setText(\"\");\n        window.location.reload();\n        console.log(response);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  };\n\n  const showChat = () => {\n    return (\n      <div>\n        {chat &&\n          chat.map((it) => (\n            <div className=\"Chat\">\n              <h3>닉네임 : {it.nickname}</h3>\n              <div>{it.content}</div>\n            </div>\n          ))}\n      </div>\n    );\n  };\n\n  useEffect(() => {\n    showChat();\n  }, []);\n\n  return (\n    <div className=\"Board\">\n      <div className=\"info\">\n        <h2>title : {title}</h2>\n        <h5 className=\"writer\">작성자 : {createdBy}</h5>\n        <h5 className=\"num\">문제 번호 : {challengeId}</h5>\n      </div>\n      <p className=\"content\">{contents}</p>\n    </div>\n  );\n};\n\nexport default Board;\n","/Users/1s0m0rph1sm/Desktop/YU/SWE/se/front/src/main/frontend/src/pages/Pagination.js",["160","161","162"],[],"import React from \"react\";\nimport styled from \"styled-components\";\n\nconst PageUl = styled.ul`\n  float: left;\n  list-style: none;\n  text-align: center;\n  border-radius: 3px;\n  color: white;\n  padding: 1px;\n  border-top: 3px solid #186ead;\n  border-bottom: 3px solid #186ead;\n  background-color: rgba(0, 0, 0, 0.4);\n`;\n\nconst PageLi = styled.li`\n  display: inline-block;\n  font-size: 17px;\n  font-weight: 600;\n  padding: 5px;\n  border-radius: 5px;\n  width: 25px;\n  &:hover {\n    cursor: pointer;\n    color: white;\n    background-color: #263a6c;\n  }\n  &:focus::after {\n    color: white;\n    background-color: #263a6c;\n  }\n`;\n\nconst PageSpan = styled.span`\n  &:hover::after,\n  &:focus::after {\n    border-radius: 100%;\n    color: white;\n    background-color: #263a6c;\n  }\n`;\n\nconst Pagination = ({ postsPerPage, totalPosts, currentPage, onPageChange }) => {\n  const pageNumbers = [];\n  for (let i = 1; i <= Math.ceil(totalPosts / postsPerPage); i++) {\n    pageNumbers.push(i);\n  }\n\n\n  return (\n    <ul className=\"pagination\">\n      {pageNumbers.map((number) => (\n        <li key={number} className={`page-item${currentPage === number ? \" active\" : \"\"}`}>\n          <button\n            onClick={() => onPageChange(number)}\n            className=\"page-link\"\n          >\n            {number}\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default Pagination;","/Users/1s0m0rph1sm/Desktop/YU/SWE/se/front/src/main/frontend/src/components/HomeButton.js",[],[],"/Users/1s0m0rph1sm/Desktop/YU/SWE/se/front/src/main/frontend/src/components/myContext.js",[],[],"/Users/1s0m0rph1sm/Desktop/YU/SWE/se/front/src/main/frontend/src/components/Nav.js",["163"],[],"import { Link } from \"react-router-dom\";\nimport logo from \"../cherry.png\";\n\nconst Nav = () => {\n  if (localStorage.getItem(\"login\") === \"true\") {\n    return (\n      <header>\n        <div>\n          <div className=\"Nav\">\n            <Link className=\"navMenu\" to={\"/Problem\"}>\n              Problem\n            </Link>\n            <Link className=\"navMenu\" to={\"/QuestionBoard\"}>\n              Question Board\n            </Link>\n            <Link className=\"navMenu\" to={\"/MyImpormation\"}>\n              MyInformation\n            </Link>\n            <Link className=\"navMenu\" to={\"/Announcement\"}>\n              Announcement\n            </Link>\n          </div>\n        </div>\n      </header>\n    );\n  } else {\n    return (\n      <header>\n        <div>\n          <div className=\"Nav\">\n            <Link className=\"navMenu\" to={\"/Problem\"}>\n              Problem\n            </Link>\n            <Link className=\"navMenu\" to={\"/QuestionBoard\"}>\n              Question Board\n            </Link>\n            <Link className=\"navMenu\" to={\"/Announcement\"}>\n              Announcement\n            </Link>\n          </div>\n        </div>\n      </header>\n    );\n  }\n};\n\nexport default Nav;\n","/Users/1s0m0rph1sm/Desktop/YU/SWE/se/front/src/main/frontend/src/components/Posts.js",[],[],"/Users/1s0m0rph1sm/Desktop/YU/SWE/se/front/src/main/frontend/src/components/Pagination.js",[],[],"/Users/1s0m0rph1sm/Desktop/YU/SWE/se/front/src/main/frontend/src/components/LoginHome.js",[],[],"/Users/1s0m0rph1sm/Desktop/YU/SWE/se/front/src/main/frontend/src/theme/useDarkMode.js",[],[],"/Users/1s0m0rph1sm/Desktop/YU/SWE/se/front/src/main/frontend/src/Board/Pagination.js",["164","165"],[],"import styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\nimport { useNavigate } from \"react-router-dom\";\n\nfunction Pagination({ total, limit, page, setPage }) {\n  const numPages = Math.ceil(total / limit); // 총 표시해야 할 페이지 수\n  const navigate = useNavigate();\n  const onWrite = () => {\n    if (localStorage.getItem(\"login\") === \"true\") {\n      navigate(\"/QuestionBoardEdit\");\n    } else {\n      alert(\"로그인 해주세요\");\n      navigate(`/login`);\n    }\n  };\n  return (\n    <div className=\"Pagination\">\n      <nav>\n        {/* 이전 버튼 */}\n        <button onClick={() => setPage(page - 1)} disabled={page === 1}>\n          &lt;\n        </button>\n        {/* 페이지 넘버링 */}\n        {Array(numPages)\n          .fill()\n          .map((_, i) => (\n            <button\n              key={i + 1}\n              onClick={() => setPage(i + 1)}\n              aria-current={page === i + 1 ? \"page\" : undefined}\n            >\n              {i + 1}\n            </button>\n          ))}\n        {/* 다음 버튼 */}\n        <button onClick={() => setPage(page + 1)} disabled={page === numPages}>\n          &gt;\n        </button>\n        <div className=\"Write\">\n          <button onClick={onWrite}>글쓰기</button>\n        </div>\n      </nav>\n    </div>\n  );\n}\n\n// const Nav = styled.nav`\n//   display: flex;\n//   justify-content: center;\n//   align-items: center;\n//   gap: 4px;\n//   margin: 16px;\n// `;\n\n// const Button = styled.button`\n//   border: none;\n//   border-radius: 8px;\n//   padding: 8px;\n//   margin: 0;\n//   background: black;\n//   color: white;\n//   font-size: 1rem;\n\n//   &:hover {\n//     background: tomato;\n//     cursor: pointer;\n//     transform: translateY(-2px);\n//   }\n\n//   &[disabled] {\n//     background: grey;\n//     cursor: revert;\n//     transform: revert;\n//   }\n\n//   &[aria-current] {\n//     background: green;\n//     font-weight: bold;\n//     cursor: revert;\n//     transform: revert;\n//   }\n// `;\n\nexport default Pagination;\n",{"ruleId":"166","replacedBy":"167"},{"ruleId":"168","replacedBy":"169"},{"ruleId":"170","replacedBy":"171"},{"ruleId":"172","replacedBy":"173"},{"ruleId":"174","replacedBy":"175"},{"ruleId":"176","replacedBy":"177"},{"ruleId":"178","severity":1,"message":"179","line":1,"column":10,"nodeType":"180","messageId":"181","endLine":1,"endColumn":14},{"ruleId":"178","severity":1,"message":"182","line":2,"column":8,"nodeType":"180","messageId":"181","endLine":2,"endColumn":12},{"ruleId":"178","severity":1,"message":"183","line":9,"column":10,"nodeType":"180","messageId":"181","endLine":9,"endColumn":15},{"ruleId":"178","severity":1,"message":"184","line":9,"column":17,"nodeType":"180","messageId":"181","endLine":9,"endColumn":28},{"ruleId":"178","severity":1,"message":"185","line":10,"column":17,"nodeType":"180","messageId":"181","endLine":10,"endColumn":25},{"ruleId":"178","severity":1,"message":"184","line":13,"column":17,"nodeType":"180","messageId":"181","endLine":13,"endColumn":28},{"ruleId":"178","severity":1,"message":"186","line":16,"column":24,"nodeType":"180","messageId":"181","endLine":16,"endColumn":39},{"ruleId":"178","severity":1,"message":"187","line":5,"column":8,"nodeType":"180","messageId":"181","endLine":5,"endColumn":12},{"ruleId":"178","severity":1,"message":"188","line":8,"column":14,"nodeType":"180","messageId":"181","endLine":8,"endColumn":19},{"ruleId":"178","severity":1,"message":"189","line":9,"column":15,"nodeType":"180","messageId":"181","endLine":9,"endColumn":21},{"ruleId":"178","severity":1,"message":"190","line":11,"column":9,"nodeType":"180","messageId":"181","endLine":11,"endColumn":17},{"ruleId":"178","severity":1,"message":"191","line":36,"column":11,"nodeType":"180","messageId":"181","endLine":36,"endColumn":15},{"ruleId":"178","severity":1,"message":"184","line":18,"column":17,"nodeType":"180","messageId":"181","endLine":18,"endColumn":28},{"ruleId":"178","severity":1,"message":"185","line":10,"column":17,"nodeType":"180","messageId":"181","endLine":10,"endColumn":25},{"ruleId":"178","severity":1,"message":"192","line":2,"column":10,"nodeType":"180","messageId":"181","endLine":2,"endColumn":19},{"ruleId":"178","severity":1,"message":"179","line":5,"column":10,"nodeType":"180","messageId":"181","endLine":5,"endColumn":14},{"ruleId":"193","severity":1,"message":"194","line":79,"column":6,"nodeType":"195","endLine":79,"endColumn":8,"suggestions":"196"},{"ruleId":"178","severity":1,"message":"197","line":15,"column":9,"nodeType":"180","messageId":"181","endLine":15,"endColumn":15},{"ruleId":"193","severity":1,"message":"198","line":55,"column":6,"nodeType":"195","endLine":55,"endColumn":8,"suggestions":"199"},{"ruleId":"178","severity":1,"message":"200","line":4,"column":7,"nodeType":"180","messageId":"181","endLine":4,"endColumn":13},{"ruleId":"178","severity":1,"message":"201","line":16,"column":7,"nodeType":"180","messageId":"181","endLine":16,"endColumn":13},{"ruleId":"178","severity":1,"message":"202","line":34,"column":7,"nodeType":"180","messageId":"181","endLine":34,"endColumn":15},{"ruleId":"178","severity":1,"message":"182","line":2,"column":8,"nodeType":"180","messageId":"181","endLine":2,"endColumn":12},{"ruleId":"178","severity":1,"message":"203","line":1,"column":8,"nodeType":"180","messageId":"181","endLine":1,"endColumn":14},{"ruleId":"178","severity":1,"message":"179","line":2,"column":10,"nodeType":"180","messageId":"181","endLine":2,"endColumn":14},"dot-location",[],"new-parens",[],"no-mixed-operators",[],"no-new-object",["204"],"no-whitespace-before-property",[],"rest-spread-spacing",[],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'logo' is defined but never used.","'theme' is assigned a value but never used.","'toggleTheme' is assigned a value but never used.","'setLimit' is assigned a value but never used.","'setPostsPerPage' is assigned a value but never used.","'Home' is defined but never used.","'setId' is assigned a value but never used.","'setPwd' is assigned a value but never used.","'onSignIn' is assigned a value but never used.","'data' is assigned a value but never used.","'Component' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getBoard'. Either include it or remove the dependency array.","ArrayExpression",["205"],"'Submit' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'showChat'. Either include it or remove the dependency array.",["206"],"'PageUl' is assigned a value but never used.","'PageLi' is assigned a value but never used.","'PageSpan' is assigned a value but never used.","'styled' is defined but never used.","no-object-constructor",{"desc":"207","fix":"208"},{"desc":"209","fix":"210"},"Update the dependencies array to be: [getBoard]",{"range":"211","text":"212"},"Update the dependencies array to be: [showChat]",{"range":"213","text":"214"},[2192,2194],"[getBoard]",[1059,1061],"[showChat]"]